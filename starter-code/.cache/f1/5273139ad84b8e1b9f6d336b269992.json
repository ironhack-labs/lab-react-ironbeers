{"id":"node_modules/@restart/hooks/esm/useCommittedRef.js","dependencies":[{"name":"/home/mario/Documents/ironhack/Module 3/Module 3 Excercises/Excercise2/lab-react-ironbeers/starter-code/package.json","includedInParent":true,"mtime":1584572262848},{"name":"/home/mario/Documents/ironhack/Module 3/Module 3 Excercises/Excercise2/lab-react-ironbeers/starter-code/node_modules/@restart/hooks/package.json","includedInParent":true,"mtime":1584543980667},{"name":"react","loc":{"line":1,"column":34},"parent":"/home/mario/Documents/ironhack/Module 3/Module 3 Excercises/Excercise2/lab-react-ironbeers/starter-code/node_modules/@restart/hooks/esm/useCommittedRef.js","resolved":"/home/mario/Documents/ironhack/Module 3/Module 3 Excercises/Excercise2/lab-react-ironbeers/starter-code/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  var ref = (0, _react.useRef)(value);\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nvar _default = useCommittedRef;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":2,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":0}},{"name":"useCommittedRef","generated":{"line":19,"column":9},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":9}},{"generated":{"line":19,"column":24},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":0}},{"name":"value","generated":{"line":19,"column":25},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":25}},{"generated":{"line":19,"column":30},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":32},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":32}},{"generated":{"line":20,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":2}},{"name":"ref","generated":{"line":20,"column":6},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":6}},{"generated":{"line":20,"column":9},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":9}},{"generated":{"line":20,"column":12},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":12}},{"name":"value","generated":{"line":20,"column":31},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":19}},{"generated":{"line":20,"column":36},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":12}},{"generated":{"line":20,"column":37},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":2}},{"generated":{"line":21,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":2}},{"generated":{"line":21,"column":24},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":12}},{"generated":{"line":21,"column":36},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":24}},{"name":"ref","generated":{"line":22,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":4}},{"name":"ref","generated":{"line":22,"column":4},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":4}},{"generated":{"line":22,"column":7},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":7}},{"name":"current","generated":{"line":22,"column":8},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":8}},{"generated":{"line":22,"column":15},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":4}},{"name":"value","generated":{"line":22,"column":18},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":18}},{"generated":{"line":22,"column":23},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":4}},{"generated":{"line":23,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":3}},{"generated":{"line":23,"column":3},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":2}},{"generated":{"line":23,"column":5},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":5}},{"name":"value","generated":{"line":23,"column":6},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":6}},{"generated":{"line":23,"column":11},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":5}},{"generated":{"line":23,"column":12},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":2}},{"generated":{"line":24,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":17,"column":2}},{"name":"ref","generated":{"line":24,"column":9},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":17,"column":9}},{"generated":{"line":24,"column":12},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":17,"column":2}},{"generated":{"line":25,"column":0},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1}},{"name":"useCommittedRef","generated":{"line":27,"column":15},"source":"node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":20,"column":15}}],"sources":{"node_modules/@restart/hooks/esm/useCommittedRef.js":"import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;"},"lineCount":null}},"error":null,"hash":"55032cf2b944d2d6eaedf9784b7e98fa","cacheData":{"env":{}}}